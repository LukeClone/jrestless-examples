def checkstyleCfg = "${projectDir}/alien/checkstyle/checkstyle.xml" as File

allprojects {
	apply plugin: 'java'

	version = '0.0.1-SNAPSHOT'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

subprojects {

	apply plugin: 'eclipse'
	apply plugin: 'checkstyle'
	apply plugin: 'findbugs'
	apply plugin: 'pmd'

    repositories {
    	mavenLocal()
		jcenter()
		mavenCentral()
	}

	task buildZip(type: Zip) {
		archiveName = "${project.name}.zip"
		from compileJava
		from processResources
		into('lib') {
			from configurations.runtime
		}
	}
	build.dependsOn buildZip

	checkstyle {
		configFile = checkstyleCfg
		toolVersion = '6.19'
		ignoreFailures = false
		sourceSets = [project.sourceSets.main]
	}
	build.dependsOn checkstyleMain

	findbugs {
		toolVersion = '3.0.1'
		sourceSets = [project.sourceSets.main]
		effort = 'max'
	}
	tasks.withType(FindBugs) {
		reports {
			xml.enabled = false
			html.enabled = true
		}
	}

	pmd {
		toolVersion = '5.4.2'
		sourceSets = [project.sourceSets.main]
	}
}

dependencies {
	compile project(':aws:gateway:aws-gateway-showcase')
	compile project(':aws:gateway:aws-gateway-spring')
	compile project(':aws:gateway:aws-gateway-guice')
	compile project(':aws:gateway:aws-gateway-cdi')
	compile project(':aws:gateway:aws-gateway-usage-example')
	compile project(':aws:gateway:aws-gateway-security-custom-authorizer')
	compile project(':aws:gateway:aws-gateway-security-cognito-authorizer')
	compile project(':aws:gateway:aws-gateway-binary')
	compile project(':aws:gateway:aws-gateway-cors-backend')
	compile project(':aws:gateway:aws-gateway-cors-frontend')
	compile project(':aws:service:aws-service-usage-example')
	compile project(':aws:service:aws-service-usage-example-client')
	compile project(':aws:sns:aws-sns-usage-example')
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.5'
}
